m2 = mean(photon_data^2)
alpha_mom = m1^2/(m2 - m1^2)
beta_mom = (m2 - m1^2)/m1
dl_da = function(x) digamma(x) - log(x) - mean(log(photon_data)) + log(mean(photon_data))
# alpha_nw1 = uniroot(fun, lower = 0.5, upper = 4)$root
# beta_nw1 = mean(x_g)/alpha_nw1
curve(dl_da, from = 0.1, to = 10, col = "coral", lwd = 2, xlab = expression(hat(alpha)),
ylab = expression(d*l ~ "/" ~ d*hat(alpha)))
grid()
alpha_nw = uniroot(dl_da, lower = 0.5, upper = 2)$root
beta_nw = mean(photon_data)/alpha_nw
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw))
# names(Var_df) = c("A priori", "A posteriori, n=20", "A posteriori, n=40")
# print(round(Var_df, 5))
gamma_df
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw))
# names(Var_df) = c("A priori", "A posteriori, n=20", "A posteriori, n=40")
# print(round(Var_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw))
# names(Var_df) = c("A priori", "A posteriori, n=20", "A posteriori, n=40")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("momentów", "Naj. wiarygodności"))
names(gamma_df) = c("alfa", "beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Momentów", "Największej wiarygodności"))
names(gamma_df) = c("alfa", "beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c(expression(hat(alpha)), "beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c(expression(alpha), "beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c("alfa", "beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c("Est. alfa", "Est. beta")
print(round(gamma_df, 5))
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c("Est. alfa", "Est. beta")
print(round(gamma_df, 4))
hist(photon_data)
hist(photon_data, ylim = 2000, col = "gold")
hist(photon_data, ylim = 20, col = "gold")
hist(photon_data, ylim = 2, col = "gold")
hist(photon_data, ylim = c(0, 2000), col = "gold")
hist(photon_data, ylim = c(0, 2000), col = "gold2")
hist(photon_data, ylim = c(0, 2000), col = "gold3")
hist(photon_data, ylim = c(0, 2000), col = "gold2")
hist(photon_data, ylim = c(0, 2000), col = "gold2", main = "Histogram odstępów")
hist(photon_data, xlim = c(0, 700), ylim = c(0, 2000), col = "gold2", main = "Histogram odstępów")
hist(photon_data, breaks = seq(0, 700, 50), xlim = c(0, 700), ylim = c(0, 2000),
col = "gold2", main = "Histogram odstępów")
hist(photon_data, breaks = seq(0, 700, 25), xlim = c(0, 700), ylim = c(0, 2000),
col = "gold2", main = "Histogram odstępów")
hist(photon_data, breaks = seq(0, 700, 25), xlim = c(0, 700), ylim = c(0, 1100),
col = "gold2", main = "Histogram odstępów")
hist(photon_data, breaks = seq(0, 700, 25), xlim = c(0, 700), ylim = c(0, 1100),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 1100),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 900),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 901),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 950),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 800),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 900),
col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 900),
xlab = "Obserwacje" col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 900),
xlab = "Obserwacje" ,col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700), ylim = c(0, 1),
xlab = "Obserwacje" ,col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "Obserwacje" ,col = "gold2", main = "Histogram odstępów", las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x" ,col = "gold2", main = expression(gamma), las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x" ,col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 0.5)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 0.6)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
names(F_emp)
F_emp
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, rate = alpha_mom, scale = beta_mom))
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), )
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x = seq(), shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 20)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 20)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 200)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 2000)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 500)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000)
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 1, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 1, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 1.5, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 1, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.008, 0.016)
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.008, 0.016),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.006, 0.012),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma), las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.006, 0.012),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma), "a posteriori, n = 40"),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", met. momentów"), "a posteriori, n = 40"),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", met. momentów"),
expression(gamma * ", met. najw. wiarygodności")),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", met. momentów"),
expression(gamma * ", met. największej wiarygodności")),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", metoda momentów"),
expression(gamma * ", metoda największej wiarygodności")),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("brown3", "blue3", "gold2"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
grid()
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.006, 0.012),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
hist(df_CREOTECH$high_diff,
breaks = 40, prob = T,
xlab = 'x',
ylab = 'f(x)',
xlim = c(-10, 15),
main = "Porównanie wykresów", col = 'darkgoldenrod1', las = 1)
lines(x, f_norm_teor, col = 'darkorchid4', lwd = 2)
legend("topright", legend = c("wartości empiryczne", "teoretyczna f. gęstości prawd."),
fill = c("darkgoldenrod1", "darkorchid4"))
grid()
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 100), ylim = c(0.006, 0.012),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
fitdistr(photon_data, "gamma")
install.packages('MASS')
fitdistr(photon_data, "gamma")
library(MASS)
fitdistr(photon_data, "gamma")
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c("Est. alfa", "Est. beta")
print(round(gamma_df, 4))
photon_data =  scan('fotony.txt')
pdf.options(encoding='ISOLatin2')
traffic_data =  scan('skrety.txt')
est_lambda = mean(traffic_data)
K = 1000
bootstrap_lambda = replicate(K, {
boot_dane = sample(traffic_data, replace = T)
return(mean(boot_dane))
})
sd_est_lambda = sd(bootstrap_lambda)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = expression(italic("k")), ylab = expression("P" ~ italic("(x=k)")))
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
unzip('mstall.zip', files = 'CREOTECH.mst')
df_CREOTECH = read.csv('CREOTECH.mst')
names(df_CREOTECH) = c('ticker', 'date', 'open', 'high', 'low', 'close','vol')
df_CREOTECH$date = as.Date.character(df_CREOTECH$date, format ='%Y%m%d')
library(lubridate)
latest_date_CREOTECH = max(df_CREOTECH$date)
df_CREOTECH = df_CREOTECH[which(df_CREOTECH$date >= latest_date_CREOTECH %m-% months(12)),]
df_CREOTECH$high_diff = with(df_CREOTECH, c(NA, 100*diff(high)/high[-length(high)]))
hist(df_CREOTECH$high_diff,
breaks = 40, prob = F,
xlab = 'Zmiana najwyższego kursu dziennego [%] ',
ylab = 'Częstość występowania',
xlim = c(-10, 15),
main = paste('Histogram procentowych zmian kursu', 'CREOTECH'), col = '#DC143C')
grid()
est_mean = mean(df_CREOTECH$high_diff, na.rm = TRUE)
est_var = var(df_CREOTECH$high_diff, na.rm = TRUE)
x = seq(min(df_CREOTECH$high_diff, na.rm = T),
max(df_CREOTECH$high_diff, na.rm = T), by = 0.1)
f_norm_teor = dnorm(x, mean = est_mean, sd = sqrt(est_var))
hist(df_CREOTECH$high_diff,
breaks = 40, prob = T,
xlab = 'x',
ylab = 'f(x)',
xlim = c(-10, 15),
main = "Porównanie wykresów", col = 'darkgoldenrod1', las = 1)
lines(x, f_norm_teor, col = 'darkorchid4', lwd = 2)
legend("topright", legend = c("wartości empiryczne", "teoretyczna f. gęstości prawd."),
fill = c("darkgoldenrod1", "darkorchid4"))
grid()
n = length(na.omit(df_CREOTECH$high_diff))
conf_level = 0.90
S = sd(df_CREOTECH$high_diff, na.rm = TRUE)
w = S*qt((1+conf_level)/2, n-1)/sqrt(n)
mean_conf_int_90 = c(est_mean - w, est_mean + w)
crit_val1 = (1 - conf_level)/2
crit_val2 = 1 - (1 - conf_level)/2
var_conf_int_90 = c((n-1)*S^2/qchisq(crit_val2, n-1), (n-1)*S^2/qchisq(crit_val1, n-1))
conf_level = 0.95
S = sd(df_CREOTECH$high_diff, na.rm = TRUE)
w = S*qt((1+conf_level)/2, n-1)/sqrt(n)
mean_conf_int_95 = c(est_mean - w, est_mean + w)
crit_val1 = (1 - conf_level)/2
crit_val2 = 1 - (1 - conf_level)/2
var_conf_int_95 = c((n-1)*S^2/qchisq(crit_val2, n-1), (n-1)*S^2/qchisq(crit_val1, n-1))
conf_level = 0.99
S = sd(df_CREOTECH$high_diff, na.rm = TRUE)
w = S*qt((1+conf_level)/2, n-1)/sqrt(n)
mean_conf_int_99 = c(est_mean - w, est_mean + w)
crit_val1 = (1 - conf_level)/2
crit_val2 = 1 - (1 - conf_level)/2
var_conf_int_99 = c((n-1)*S^2/qchisq(crit_val2, n-1), (n-1)*S^2/qchisq(crit_val1, n-1))
alpha_prior = 3
beta_prior = 7
x_ = seq(0, 1, 0.01)
y = dbeta(x_, alpha_prior, beta_prior)
plot(x_, y, type = "l", col = "brown3", lwd = 2,
main = "Rozkład a priori", xlab = "p", ylab = "f(p)", las = 1)
grid()
test_1 = c(0,0,1,0,0,0,0,0,1,0,1,1,0,1,1,0,0,0,0,0)
df_test_1 = as.data.frame(table(test_1))
names(df_test_1) = c("Wynik", "Liczba zdarzeń")
print(df_test_1)
alpha_post = alpha_prior + sum(test_1)
beta_post = beta_prior + length(test_1) - sum(test_1)
x_ = seq(0, 1, 0.01)
y1 = dbeta(x_, alpha_post, beta_post)
plot(x_, y1, type = "l", col = "blue3", lwd = 2,
main = "Rozkład a posteriori, 20 rzutów", xlab = "p", ylab = "f(p)", las = 1)
grid()
p_est = (alpha_post - 1) / (alpha_post + beta_post - 2)
test_2 = c(0,0,0,0,0,0,1,1,1,0,1,1,0,1,0,1,0,0,1,1)
df_test_2 = as.data.frame(table(test_2))
names(df_test_2) = c("Wynik", "Liczba zdarzeń")
print(df_test_2)
alpha_post_2 = alpha_prior + sum(test_1, test_2)
beta_post_2 = beta_prior + length(c(test_1, test_2)) - sum(test_1, test_2)
y2 = dbeta(x_, alpha_post_2, beta_post_2)
plot(x_, y2, type = "l", col = "gold2", lwd = 2,
main = "Rozkład a posteriori, 40 rzutów", xlab = "p", ylab = "f(p)", las = 1)
grid()
p_est_2 = (alpha_post_2 - 1) / (alpha_post_2 + beta_post_2 - 2)
var_prior = (alpha_prior * beta_prior) / (((alpha_prior + beta_prior) ^ 2) * (alpha_prior + beta_prior + 1))
var_post_1 = (alpha_post * beta_post) / (((alpha_post + beta_post) ^ 2) * (alpha_post + beta_post + 1))
var_post_2 = (alpha_post_2 * beta_post_2) / (((alpha_post_2 + beta_post_2) ^ 2) * (alpha_post_2 + beta_post_2 + 1))
Var_df = data.frame(var_prior, var_post_1, var_post_2, row.names = "Wariancja")
names(Var_df) = c("A priori", "A posteriori, n=20", "A posteriori, n=40")
print(round(Var_df, 5))
plot(x_, y2, type = "l", col = "gold2", lwd = 2,
main = "Porównanie rozkładów", xlab = "p", ylab = "f(p)", las = 1)
lines(x_, y1, col = "blue3", lwd = 2)
lines(x_, y, col = "brown3", lwd = 2)
grid()
legend("topright", legend = c("a priori", "a posteriori, n = 20", "a posteriori, n = 40"),
col = c("brown3", "blue3", "gold2"), lwd = 2)
text(x = 0.4, y = 5.2, labels = paste("var =", round((var_post_2), 5)), pos = 4, col = "gold2")
text(x = 0.23, y = 4, labels = paste("var =", round((var_post_1), 5)), pos = 2, col = "blue3")
text(x = 0.17, y = 2.4, labels = paste("var =", round((var_prior), 5)), pos = 2, col = "brown3")
photon_data =  scan('fotony.txt')
m1 = mean(photon_data)
m2 = mean(photon_data^2)
alpha_mom = m1^2/(m2 - m1^2)
beta_mom = (m2 - m1^2)/m1
dl_da = function(x) digamma(x) - log(x) - mean(log(photon_data)) + log(mean(photon_data))
# alpha_nw1 = uniroot(fun, lower = 0.5, upper = 4)$root
# beta_nw1 = mean(x_g)/alpha_nw1
curve(dl_da, from = 0.1, to = 10, col = "coral", lwd = 2, xlab = expression(hat(alpha)),
ylab = expression(d*l ~ "/" ~ d*hat(alpha)))
grid()
alpha_nw = uniroot(dl_da, lower = 0.5, upper = 2)$root
beta_nw = mean(photon_data)/alpha_nw
gamma_df = data.frame(c(alpha_mom, alpha_nw), c(beta_mom, beta_nw),
row.names = c("Metoda momentów", "Metoda największej wiarygodności"))
names(gamma_df) = c("Est. alfa", "Est. beta")
print(round(gamma_df, 4))
hist(photon_data, prob = T, breaks = seq(0, 700, 20), xlim = c(0, 700),
xlab = "x", ylab = "f(x)", col = "gold2", main = expression("Porównanie danych z rozkładami" ~ gamma),
las = 1)
curve(dgamma(x, shape = alpha_mom, scale = beta_mom), add = T, lwd = 2, n = 1000, col = "red2")
curve(dgamma(x, shape = alpha_nw, scale = beta_nw), add = T, lwd = 2, n = 1000, col = "darkgreen")
legend("topright", legend = c("obserwacje empiryczne", expression(gamma * ", wg metody momentów"),
expression(gamma * ", wg metody największej wiarygodności")),
col = c("gold2", "red2", "darkgreen"), lwd = 2)
fitdistr(photon_data, "gamma")
fitdistr(photon_data[photon_data!=0], "gamma")
plot(photon_data)
plot(seq(0, 100), photon_data)
plot(length(photon_data), photon_data)
fitdistr(photon_data, 'gamma', list(shape=1, scale=1), lower=0)
fitdistr(photon_data, 'gamma', list(shape=1, scale=1))
str( fitdistr(photon_data, 'gamma', list(shape=1, scale=1), lower=0))
test = list(c(1, 2), c(3, 4))
list[1]
list[[1]]
test2 = list[1]
test[1]
test[[1]
test[[1]]
gamma_bootstrap = function(data, K, alpha_est, beta_est){
alpha_values = c()
beta_values = c()
for (i in 1:K) {
sample = rgamma(length(data), shape = alpha_est, scale = beta_est)
gamma_fit = fitdistr(sample, 'gamma', list(shape=1, scale=1), lower=0)
alpha_values <- append(alpha_values, as.numeric(gamma_fit$estimate[1]))
beta_values <- append(beta_values, as.numeric(gamma_fit$estimate[2]))
}
return(list(alpha = alpha_values, beta = beta_values))
}
gamma_bootstrap_mom = gamma_bootstrap(photon_data, 1000, alpha_mom, beta_mom)
gamma_bootstrap_mom = gamma_bootstrap(photon_data, 50, alpha_mom, beta_mom)
# gamma_bootstrap_nw = gamma_bootstrap(photon_data, 100, alpha_nw, beta_nw)
View(gamma_bootstrap_mom)
gamma_bootstrap_nw = gamma_bootstrap(photon_data, 100, alpha_nw, beta_nw)
gamma_bootstrap_nw = gamma_bootstrap(photon_data, 50, alpha_nw, beta_nw)
gamma_bootstrap_mom$sd_alpha = sd(gamma_bootstrap_mom$alpha)
View(gamma_bootstrap_mom)
gamma_bootstrap_mom$sd_alpha = sd(gamma_bootstrap_mom$alpha)
gamma_bootstrap_mom$sd_beta = sd(gamma_bootstrap_mom$beta)
gamma_bootstrap_nw$sd_alpha = sd(gamma_bootstrap_nw$alpha)
gamma_bootstrap_nw$sd_beta = sd(gamma_bootstrap_nw$beta)
View(gamma_bootstrap_nw)
View(gamma_bootstrap_mom)
conf_level = 0.95
gamma_bootstrap_mom$ci_alpha = quantile(gamma_bootstrap_mom$alpha,
c((1 - conf_level) / 2, (1 + conf_level) / 2))
gamma_bootstrap_mom$ci_beta = quantile(gamma_bootstrap_mom$beta,
c((1 - conf_level) / 2, (1 + conf_level) / 2))
gamma_bootstrap_nw$ci_alpha = quantile(gamma_bootstrap_nw$alpha,
c((1 - conf_level) / 2, (1 + conf_level) / 2))
gamma_bootstrap_nw$ci_beta = quantile(gamma_bootstrap_nw$beta,
c((1 - conf_level) / 2, (1 + conf_level) / 2))
View(gamma_bootstrap_mom)
df_gamma = data.frame(gamma_bootstrap_mom, gamma_bootstrap_nw)
View(gamma_df)
View(df_gamma)
View(df_gamma)
View(df_gamma)
gamma_bootstrap_mom[3]
gamma_bootstrap_mom[3:4]
gamma_bootstrap_mom[3:5]
df_gamma_bootstrap = data.frame(gamma_bootstrap_mom[3:5], gamma_bootstrap_nw[3:5])
View(df_gamma_bootstrap)
gamma_bootstrap_mom[5]
gamma_bootstrap_mom[5][1]
str(gamma_bootstrap_mom[5])
gamma_bootstrap_mom[5]
gamma_bootstrap_mom[5][1]
gamma_bootstrap_mom[5][2]
gamma_bootstrap_mom[5][[1]]
gamma_bootstrap_mom[[5]][[1]]
gamma_bootstrap_mom[[5]]
gamma_bootstrap_mom[[5]][[1]]
with(gamma_bootstrap_mom, [[5]])
with(gamma_bootstrap_mom, ci_alpha)
View(df_gamma_bootstrap)
View(gamma_bootstrap_mom)
c(gamma_bootstrap_mom[3:4])

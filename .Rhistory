pdf.options(encoding='ISOLatin2')
traffic_data =  scan('skrety.txt')
est_lambda = mean(traffic_data)
K = 1000
bootstrap_lambda = replicate(K, {
boot_dane = sample(traffic_data, replace = T)
return(mean(boot_dane))
})
sd_est_lambda = sd(bootstrap_lambda)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor)
points(F_emp / length(traffic_data))
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type ='p')
points(F_emp / length(traffic_data))
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data))
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
# points(F_emp / length(traffic_data))
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data))
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data), type = "p")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data), type = "p", pch = 3)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = 0.25)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25))
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4", las = 1)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4", las = 1, lwd = 2)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4", las = 1)
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend(f)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna")
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"))
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = ("green4", "red3"),
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = F)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
# axis(1, at = 0:12)
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
grid()
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
grid(nx = 13)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
grid(nx = 12)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
grid(nx = 13)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
abline(v = 0:12)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
abline(v = 0:12, lty = 2)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
abline(v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
abline(h = 0:1, v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3))
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), fill = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white", z = 2)
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = "k", ylab = "P(x=k)")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = italic("k"), ylab = "P(x=k)")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = expression(italic("k")), ylab = "P(x=k)")
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = expression(italic("k")), ylab = expression("P" ~ italic("(x=k)")))
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = expression(italic("k")), ylab = expression("P"~italic("(x=k)")))
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
F_emp = table(traffic_data)
F_teor = dpois(as.numeric(names(F_emp)), lambda = est_lambda)
plot(0:12, F_teor,type = "p", ylim = c(0, 0.25), pch = 4, col = "green4",
las = 1, lwd = 2, main = "Funkcje prawdopodobieństwa", xaxt = "n",
xlab = expression(italic("k")), ylab = expression("P" ~ italic("(x=k)")))
points(F_emp / length(traffic_data), type = "p", pch = 3, col = "red3")
legend("topright", legend = c("teoretyczna", "empiryczna"), col = c("green4", "red3"),
pch = c(4, 3), bg = "white")
axis(1, at = 0:12)
abline(h = seq(0, 0.25, by = 0.05), v = 0:12, lty = 2, col = "grey")
unzip('mstall.zip', files = 'CREOTECH.mst')
df_CREOTECH = read.csv('CREOTECH.mst')
View(df_CREOTECH)
unzip('mstall.zip', files = 'CREOTECH.mst')
df_CREOTECH = read.csv('CREOTECH.mst')
names(df_CREOTECH) = c('ticker', 'date', 'open', 'high', 'low', 'close','vol')
df_CREOTECH$date = as.Date.character(df_CREOTECH$date, format ='%Y%m%d')
library(lubridate)
install.packages(lubridate)
install.packages("lubridate")
library(lubridate)
latest_date_CREOTECH = max(df_CREOTECH$date)
df_CREOTECH = df_CREOTECH[which(df_CREOTECH$date >= latest_date_CREOTECH %m-% months(12)),]
library(lubridate)
latest_date_CREOTECH = max(df_CREOTECH$date)
df_CREOTECH = df_CREOTECH[which(df_CREOTECH$date >= latest_date_CREOTECH %m-% months(12)),]
df_CREOTECH$high_diff = with(df_CREOTECH, c(NA, 100*diff(high)/high[-length(high)]))
df_CREOTECH$high_diff2 = with(df_CREOTECH, c(NA, 100*diff(high)/high))
df_CREOTECH$high_diff = with(df_CREOTECH, c(NA, 100*diff(high)/high[-length(high)]))
hist(df_CREOTECH$high_diff)
hist(df_CREOTECH$high_diff, breaks = 11)
hist(df_CREOTECH$high_diff, breaks = 130)
hist(df_CREOTECH$high_diff, breaks = 50)
hist(df_CREOTECH$high_diff, breaks = 51
)
hist(df_CREOTECH$high_diff,
breaks = 20, prob = T,
xlab = 'Zmiana najwyższego kursu dziennego [%] ',
ylab = 'Częstość występowania',
xlim = c(-10, 15),
main = paste('Histogram procentowych zmian kursu', 'CREOTECH'), col = '#DC143C')
grid()
hist(df_CREOTECH$high_diff,
breaks = 20, prob = F,
xlab = 'Zmiana najwyższego kursu dziennego [%] ',
ylab = 'Częstość występowania',
xlim = c(-10, 15),
main = paste('Histogram procentowych zmian kursu', 'CREOTECH'), col = '#DC143C')
grid()
hist(df_CREOTECH$high_diff,
breaks = 40, prob = F,
xlab = 'Zmiana najwyższego kursu dziennego [%] ',
ylab = 'Częstość występowania',
xlim = c(-10, 15),
main = paste('Histogram procentowych zmian kursu', 'CREOTECH'), col = '#DC143C')
grid()
